<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: %3 Pages: 1 -->
<svg width="3523pt" height="895pt"
 viewBox="0.00 0.00 3522.50 895.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 891)">
<title>%3</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-891 3518.5,-891 3518.5,4 -4,4"/>
<!-- (below main) -->
<g id="node1" class="node">
<title>(below main)</title>
<polygon fill="#ff0100" stroke="#ff0100" points="696,-681 625,-681 625,-618 696,-618 696,-681"/>
<text text-anchor="middle" x="660.5" y="-669" font-family="Arial" font-size="10.00" fill="#ffffff">libc&#45;2.26.so</text>
<text text-anchor="middle" x="660.5" y="-658" font-family="Arial" font-size="10.00" fill="#ffffff">(below main)</text>
<text text-anchor="middle" x="660.5" y="-647" font-family="Arial" font-size="10.00" fill="#ffffff">99.89%</text>
<text text-anchor="middle" x="660.5" y="-636" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="660.5" y="-625" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- main -->
<g id="node2" class="node">
<title>main</title>
<polygon fill="#ff0100" stroke="#ff0100" points="712.5,-578 608.5,-578 608.5,-515 712.5,-515 712.5,-578"/>
<text text-anchor="middle" x="660.5" y="-566" font-family="Arial" font-size="10.00" fill="#ffffff">YandexOptimization</text>
<text text-anchor="middle" x="660.5" y="-555" font-family="Arial" font-size="10.00" fill="#ffffff">main</text>
<text text-anchor="middle" x="660.5" y="-544" font-family="Arial" font-size="10.00" fill="#ffffff">99.89%</text>
<text text-anchor="middle" x="660.5" y="-533" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="660.5" y="-522" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- (below main)&#45;&gt;main -->
<g id="edge1" class="edge">
<title>(below main)&#45;&gt;main</title>
<path fill="none" stroke="#ff0100" stroke-width="4" d="M660.5,-617.7562C660.5,-608.5536 660.5,-598.3591 660.5,-588.6267"/>
<polygon fill="#ff0100" stroke="#ff0100" stroke-width="4" points="664.0001,-588.3163 660.5,-578.3163 657.0001,-588.3164 664.0001,-588.3163"/>
<text text-anchor="middle" x="677.5" y="-601" font-family="Arial" font-size="10.00" fill="#ff0100">99.89%</text>
<text text-anchor="middle" x="677.5" y="-590" font-family="Arial" font-size="10.00" fill="#ff0100">1×</text>
</g>
<!-- genTests(int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int) -->
<g id="node11" class="node">
<title>genTests(int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int)</title>
<polygon fill="#0d1976" stroke="#0d1976" points="661,-475 190,-475 190,-412 661,-412 661,-475"/>
<text text-anchor="middle" x="425.5" y="-463" font-family="Arial" font-size="10.00" fill="#ffffff">YandexOptimization</text>
<text text-anchor="middle" x="425.5" y="-452" font-family="Arial" font-size="10.00" fill="#ffffff">genTests(int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int)</text>
<text text-anchor="middle" x="425.5" y="-441" font-family="Arial" font-size="10.00" fill="#ffffff">2.82%</text>
<text text-anchor="middle" x="425.5" y="-430" font-family="Arial" font-size="10.00" fill="#ffffff">(0.29%)</text>
<text text-anchor="middle" x="425.5" y="-419" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- main&#45;&gt;genTests(int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int) -->
<g id="edge9" class="edge">
<title>main&#45;&gt;genTests(int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int)</title>
<path fill="none" stroke="#0d1976" stroke-width=".5" d="M608.3459,-523.641C576.7761,-509.804 535.9784,-491.9224 500.9328,-476.562"/>
<polygon fill="#0d1976" stroke="#0d1976" stroke-width=".5" points="501.2571,-475.3667 497.5598,-475.0836 500.2736,-477.6107 501.2571,-475.3667"/>
<text text-anchor="middle" x="578.5" y="-498" font-family="Arial" font-size="10.00" fill="#0d1976">2.82%</text>
<text text-anchor="middle" x="578.5" y="-487" font-family="Arial" font-size="10.00" fill="#0d1976">1×</text>
</g>
<!-- runTests(int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) -->
<g id="node13" class="node">
<title>runTests(int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</title>
<polygon fill="#fb1e01" stroke="#fb1e01" points="1125.5,-475 673.5,-475 673.5,-412 1125.5,-412 1125.5,-475"/>
<text text-anchor="middle" x="899.5" y="-463" font-family="Arial" font-size="10.00" fill="#ffffff">YandexOptimization</text>
<text text-anchor="middle" x="899.5" y="-452" font-family="Arial" font-size="10.00" fill="#ffffff">runTests(int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</text>
<text text-anchor="middle" x="899.5" y="-441" font-family="Arial" font-size="10.00" fill="#ffffff">97.06%</text>
<text text-anchor="middle" x="899.5" y="-430" font-family="Arial" font-size="10.00" fill="#ffffff">(0.09%)</text>
<text text-anchor="middle" x="899.5" y="-419" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- main&#45;&gt;runTests(int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) -->
<g id="edge10" class="edge">
<title>main&#45;&gt;runTests(int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</title>
<path fill="none" stroke="#fb1e01" stroke-width="3.88" d="M712.6542,-524.0235C743.1663,-510.8739 782.3757,-493.9762 816.991,-479.0583"/>
<polygon fill="#fb1e01" stroke="#fb1e01" stroke-width="3.88" points="818.4311,-482.2108 826.1514,-475.1105 815.6883,-475.8466 818.4311,-482.2108"/>
<text text-anchor="middle" x="817.5" y="-498" font-family="Arial" font-size="10.00" fill="#fb1e01">97.06%</text>
<text text-anchor="middle" x="817.5" y="-487" font-family="Arial" font-size="10.00" fill="#fb1e01">1×</text>
</g>
<!-- 0x0000000000000f30 -->
<g id="node3" class="node">
<title>0x0000000000000f30</title>
<polygon fill="#ff0000" stroke="#ff0000" points="715,-887 606,-887 606,-824 715,-824 715,-887"/>
<text text-anchor="middle" x="660.5" y="-875" font-family="Arial" font-size="10.00" fill="#ffffff">ld&#45;2.26.so</text>
<text text-anchor="middle" x="660.5" y="-864" font-family="Arial" font-size="10.00" fill="#ffffff">0x0000000000000f30</text>
<text text-anchor="middle" x="660.5" y="-853" font-family="Arial" font-size="10.00" fill="#ffffff">100.00%</text>
<text text-anchor="middle" x="660.5" y="-842" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="660.5" y="-831" font-family="Arial" font-size="10.00" fill="#ffffff">0×</text>
</g>
<!-- _start -->
<g id="node4" class="node">
<title>_start</title>
<polygon fill="#ff0100" stroke="#ff0100" points="712.5,-784 608.5,-784 608.5,-721 712.5,-721 712.5,-784"/>
<text text-anchor="middle" x="660.5" y="-772" font-family="Arial" font-size="10.00" fill="#ffffff">YandexOptimization</text>
<text text-anchor="middle" x="660.5" y="-761" font-family="Arial" font-size="10.00" fill="#ffffff">_start</text>
<text text-anchor="middle" x="660.5" y="-750" font-family="Arial" font-size="10.00" fill="#ffffff">99.89%</text>
<text text-anchor="middle" x="660.5" y="-739" font-family="Arial" font-size="10.00" fill="#ffffff">(0.00%)</text>
<text text-anchor="middle" x="660.5" y="-728" font-family="Arial" font-size="10.00" fill="#ffffff">1×</text>
</g>
<!-- 0x0000000000000f30&#45;&gt;_start -->
<g id="edge2" class="edge">
<title>0x0000000000000f30&#45;&gt;_start</title>
<path fill="none" stroke="#ff0100" stroke-width="4" d="M660.5,-823.7562C660.5,-814.5536 660.5,-804.3591 660.5,-794.6267"/>
<polygon fill="#ff0100" stroke="#ff0100" stroke-width="4" points="664.0001,-794.3163 660.5,-784.3163 657.0001,-794.3164 664.0001,-794.3163"/>
<text text-anchor="middle" x="677.5" y="-807" font-family="Arial" font-size="10.00" fill="#ff0100">99.89%</text>
<text text-anchor="middle" x="677.5" y="-796" font-family="Arial" font-size="10.00" fill="#ff0100">1×</text>
</g>
<!-- _start&#45;&gt;(below main) -->
<g id="edge6" class="edge">
<title>_start&#45;&gt;(below main)</title>
<path fill="none" stroke="#ff0100" stroke-width="4" d="M660.5,-720.7562C660.5,-711.5536 660.5,-701.3591 660.5,-691.6267"/>
<polygon fill="#ff0100" stroke="#ff0100" stroke-width="4" points="664.0001,-691.3163 660.5,-681.3163 657.0001,-691.3164 664.0001,-691.3163"/>
<text text-anchor="middle" x="677.5" y="-704" font-family="Arial" font-size="10.00" fill="#ff0100">99.89%</text>
<text text-anchor="middle" x="677.5" y="-693" font-family="Arial" font-size="10.00" fill="#ff0100">1×</text>
</g>
<!-- SolutionGreedy2::solve() -->
<g id="node5" class="node">
<title>SolutionGreedy2::solve()</title>
<polygon fill="#f82f01" stroke="#f82f01" points="961.5,-372 837.5,-372 837.5,-309 961.5,-309 961.5,-372"/>
<text text-anchor="middle" x="899.5" y="-360" font-family="Arial" font-size="10.00" fill="#ffffff">YandexOptimization</text>
<text text-anchor="middle" x="899.5" y="-349" font-family="Arial" font-size="10.00" fill="#ffffff">SolutionGreedy2::solve()</text>
<text text-anchor="middle" x="899.5" y="-338" font-family="Arial" font-size="10.00" fill="#ffffff">95.34%</text>
<text text-anchor="middle" x="899.5" y="-327" font-family="Arial" font-size="10.00" fill="#ffffff">(24.85%)</text>
<text text-anchor="middle" x="899.5" y="-316" font-family="Arial" font-size="10.00" fill="#ffffff">6400×</text>
</g>
<!-- operator delete(void*) -->
<g id="node6" class="node">
<title>operator delete(void*)</title>
<polygon fill="#0d1074" stroke="#0d1074" points="871,-269 762,-269 762,-206 871,-206 871,-269"/>
<text text-anchor="middle" x="816.5" y="-257" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.24</text>
<text text-anchor="middle" x="816.5" y="-246" font-family="Arial" font-size="10.00" fill="#ffffff">operator delete(void*)</text>
<text text-anchor="middle" x="816.5" y="-235" font-family="Arial" font-size="10.00" fill="#ffffff">0.83%</text>
<text text-anchor="middle" x="816.5" y="-224" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="816.5" y="-213" font-family="Arial" font-size="10.00" fill="#ffffff">208077×</text>
</g>
<!-- SolutionGreedy2::solve()&#45;&gt;operator delete(void*) -->
<g id="edge3" class="edge">
<title>SolutionGreedy2::solve()&#45;&gt;operator delete(void*)</title>
<path fill="none" stroke="#0d0e73" stroke-width=".5" d="M873.92,-308.7562C864.611,-297.204 854.0423,-284.0887 844.5321,-272.2868"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width=".5" points="845.2884,-271.273 842.1384,-269.3163 843.3807,-272.8103 845.2884,-271.273"/>
<text text-anchor="middle" x="881" y="-292" font-family="Arial" font-size="10.00" fill="#0d0e73">0.28%</text>
<text text-anchor="middle" x="881" y="-281" font-family="Arial" font-size="10.00" fill="#0d0e73">76800×</text>
</g>
<!-- operator new(unsigned long) -->
<g id="node7" class="node">
<title>operator new(unsigned long)</title>
<polygon fill="#0d1074" stroke="#0d1074" points="676.5,-269 538.5,-269 538.5,-206 676.5,-206 676.5,-269"/>
<text text-anchor="middle" x="607.5" y="-257" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.24</text>
<text text-anchor="middle" x="607.5" y="-246" font-family="Arial" font-size="10.00" fill="#ffffff">operator new(unsigned long)</text>
<text text-anchor="middle" x="607.5" y="-235" font-family="Arial" font-size="10.00" fill="#ffffff">0.85%</text>
<text text-anchor="middle" x="607.5" y="-224" font-family="Arial" font-size="10.00" fill="#ffffff">(0.08%)</text>
<text text-anchor="middle" x="607.5" y="-213" font-family="Arial" font-size="10.00" fill="#ffffff">208083×</text>
</g>
<!-- SolutionGreedy2::solve()&#45;&gt;operator new(unsigned long) -->
<g id="edge4" class="edge">
<title>SolutionGreedy2::solve()&#45;&gt;operator new(unsigned long)</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M837.4247,-310.5781C836.1085,-310.0394 834.7991,-309.5127 833.5,-309 783.1339,-289.1248 724.8419,-270.7929 680.0752,-257.6678"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="680.3075,-256.4595 676.6043,-256.6527 679.6197,-258.811 680.3075,-256.4595"/>
<text text-anchor="middle" x="825" y="-292" font-family="Arial" font-size="10.00" fill="#0d0f73">0.43%</text>
<text text-anchor="middle" x="825" y="-281" font-family="Arial" font-size="10.00" fill="#0d0f73">76800×</text>
</g>
<!-- void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;) -->
<g id="node8" class="node">
<title>void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;)</title>
<polygon fill="#a4d107" stroke="#a4d107" points="3455,-269 880,-269 880,-206 3455,-206 3455,-269"/>
<text text-anchor="middle" x="2167.5" y="-257" font-family="Arial" font-size="10.00" fill="#ffffff">YandexOptimization</text>
<text text-anchor="middle" x="2167.5" y="-246" font-family="Arial" font-size="10.00" fill="#ffffff">void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;)</text>
<text text-anchor="middle" x="2167.5" y="-235" font-family="Arial" font-size="10.00" fill="#ffffff">69.44%</text>
<text text-anchor="middle" x="2167.5" y="-224" font-family="Arial" font-size="10.00" fill="#ffffff">(30.75%)</text>
<text text-anchor="middle" x="2167.5" y="-213" font-family="Arial" font-size="10.00" fill="#ffffff">6400×</text>
</g>
<!-- SolutionGreedy2::solve()&#45;&gt;void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;) -->
<g id="edge5" class="edge">
<title>SolutionGreedy2::solve()&#45;&gt;void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;)</title>
<path fill="none" stroke="#a4d107" stroke-width="2.78" d="M961.6224,-310.3506C963.2533,-309.8644 964.8808,-309.4125 966.5,-309 1031.984,-292.3159 1141.0894,-279.498 1267.5822,-269.6578"/>
<polygon fill="#a4d107" stroke="#a4d107" stroke-width="2.78" points="1267.8867,-272.5481 1275.9389,-269.014 1267.4403,-266.7552 1267.8867,-272.5481"/>
<text text-anchor="middle" x="1179.5" y="-292" font-family="Arial" font-size="10.00" fill="#a4d107">69.44%</text>
<text text-anchor="middle" x="1179.5" y="-281" font-family="Arial" font-size="10.00" fill="#a4d107">6400×</text>
</g>
<!-- free -->
<g id="node10" class="node">
<title>free</title>
<polygon fill="#0d1074" stroke="#0d1074" points="850,-166 783,-166 783,-103 850,-103 850,-166"/>
<text text-anchor="middle" x="816.5" y="-154" font-family="Arial" font-size="10.00" fill="#ffffff">libc&#45;2.26.so</text>
<text text-anchor="middle" x="816.5" y="-143" font-family="Arial" font-size="10.00" fill="#ffffff">free</text>
<text text-anchor="middle" x="816.5" y="-132" font-family="Arial" font-size="10.00" fill="#ffffff">0.83%</text>
<text text-anchor="middle" x="816.5" y="-121" font-family="Arial" font-size="10.00" fill="#ffffff">(0.17%)</text>
<text text-anchor="middle" x="816.5" y="-110" font-family="Arial" font-size="10.00" fill="#ffffff">208483×</text>
</g>
<!-- operator delete(void*)&#45;&gt;free -->
<g id="edge11" class="edge">
<title>operator delete(void*)&#45;&gt;free</title>
<path fill="none" stroke="#0d1074" stroke-width=".5" d="M816.5,-205.7562C816.5,-194.3998 816.5,-181.5328 816.5,-169.888"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width=".5" points="817.7251,-169.8163 816.5,-166.3163 815.2751,-169.8164 817.7251,-169.8163"/>
<text text-anchor="middle" x="835.5" y="-189" font-family="Arial" font-size="10.00" fill="#0d1074">0.82%</text>
<text text-anchor="middle" x="835.5" y="-178" font-family="Arial" font-size="10.00" fill="#0d1074">208078×</text>
</g>
<!-- malloc -->
<g id="node14" class="node">
<title>malloc</title>
<polygon fill="#0d1074" stroke="#0d1074" points="641,-166 574,-166 574,-103 641,-103 641,-166"/>
<text text-anchor="middle" x="607.5" y="-154" font-family="Arial" font-size="10.00" fill="#ffffff">libc&#45;2.26.so</text>
<text text-anchor="middle" x="607.5" y="-143" font-family="Arial" font-size="10.00" fill="#ffffff">malloc</text>
<text text-anchor="middle" x="607.5" y="-132" font-family="Arial" font-size="10.00" fill="#ffffff">0.77%</text>
<text text-anchor="middle" x="607.5" y="-121" font-family="Arial" font-size="10.00" fill="#ffffff">(0.30%)</text>
<text text-anchor="middle" x="607.5" y="-110" font-family="Arial" font-size="10.00" fill="#ffffff">208525×</text>
</g>
<!-- operator new(unsigned long)&#45;&gt;malloc -->
<g id="edge12" class="edge">
<title>operator new(unsigned long)&#45;&gt;malloc</title>
<path fill="none" stroke="#0d1074" stroke-width=".5" d="M607.5,-205.7562C607.5,-194.3998 607.5,-181.5328 607.5,-169.888"/>
<polygon fill="#0d1074" stroke="#0d1074" stroke-width=".5" points="608.7251,-169.8163 607.5,-166.3163 606.2751,-169.8164 608.7251,-169.8163"/>
<text text-anchor="middle" x="626.5" y="-189" font-family="Arial" font-size="10.00" fill="#0d1074">0.77%</text>
<text text-anchor="middle" x="626.5" y="-178" font-family="Arial" font-size="10.00" fill="#0d1074">208084×</text>
</g>
<!-- void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;)&#39;2 -->
<g id="node16" class="node">
<title>void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;)&#39;2</title>
<polygon fill="#0ba651" stroke="#0ba651" points="3458.5,-166 876.5,-166 876.5,-103 3458.5,-103 3458.5,-166"/>
<text text-anchor="middle" x="2167.5" y="-154" font-family="Arial" font-size="10.00" fill="#ffffff">YandexOptimization</text>
<text text-anchor="middle" x="2167.5" y="-143" font-family="Arial" font-size="10.00" fill="#ffffff">void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;)&#39;2</text>
<text text-anchor="middle" x="2167.5" y="-132" font-family="Arial" font-size="10.00" fill="#ffffff">38.70%</text>
<text text-anchor="middle" x="2167.5" y="-121" font-family="Arial" font-size="10.00" fill="#ffffff">(38.70%)</text>
<text text-anchor="middle" x="2167.5" y="-110" font-family="Arial" font-size="10.00" fill="#ffffff">953600×</text>
</g>
<!-- void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;)&#45;&gt;void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;)&#39;2 -->
<g id="edge16" class="edge">
<title>void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;)&#45;&gt;void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;)&#39;2</title>
<path fill="none" stroke="#0ba651" stroke-width="1.55" d="M2167.5,-205.7562C2167.5,-195.2809 2167.5,-183.5203 2167.5,-172.6192"/>
<polygon fill="#0ba651" stroke="#0ba651" stroke-width="1.55" points="2169.6701,-172.5163 2167.5,-166.3163 2165.3301,-172.5164 2169.6701,-172.5163"/>
<text text-anchor="middle" x="2184.5" y="-189" font-family="Arial" font-size="10.00" fill="#0ba651">38.70%</text>
<text text-anchor="middle" x="2184.5" y="-178" font-family="Arial" font-size="10.00" fill="#0ba651">57600×</text>
</g>
<!-- _int_free -->
<g id="node9" class="node">
<title>_int_free</title>
<polygon fill="#0d0f74" stroke="#0d0f74" points="850,-63 783,-63 783,0 850,0 850,-63"/>
<text text-anchor="middle" x="816.5" y="-51" font-family="Arial" font-size="10.00" fill="#ffffff">libc&#45;2.26.so</text>
<text text-anchor="middle" x="816.5" y="-40" font-family="Arial" font-size="10.00" fill="#ffffff">_int_free</text>
<text text-anchor="middle" x="816.5" y="-29" font-family="Arial" font-size="10.00" fill="#ffffff">0.66%</text>
<text text-anchor="middle" x="816.5" y="-18" font-family="Arial" font-size="10.00" fill="#ffffff">(0.60%)</text>
<text text-anchor="middle" x="816.5" y="-7" font-family="Arial" font-size="10.00" fill="#ffffff">208481×</text>
</g>
<!-- free&#45;&gt;_int_free -->
<g id="edge7" class="edge">
<title>free&#45;&gt;_int_free</title>
<path fill="none" stroke="#0d0f74" stroke-width=".5" d="M816.5,-102.7562C816.5,-91.3998 816.5,-78.5328 816.5,-66.888"/>
<polygon fill="#0d0f74" stroke="#0d0f74" stroke-width=".5" points="817.7251,-66.8163 816.5,-63.3163 815.2751,-66.8164 817.7251,-66.8163"/>
<text text-anchor="middle" x="835.5" y="-86" font-family="Arial" font-size="10.00" fill="#0d0f74">0.66%</text>
<text text-anchor="middle" x="835.5" y="-75" font-family="Arial" font-size="10.00" fill="#0d0f74">208481×</text>
</g>
<!-- std::pair&lt;std::_Rb_tree_iterator&lt;Point&gt;, bool&gt; std::_Rb_tree&lt;Point, Point, std::_Identity&lt;Point&gt;, std::less&lt;Point&gt;, std::allocator&lt;Point&gt; &gt;::_M_insert_unique&lt;Point const&amp;&gt;(Point const&amp;) -->
<g id="node12" class="node">
<title>std::pair&lt;std::_Rb_tree_iterator&lt;Point&gt;, bool&gt; std::_Rb_tree&lt;Point, Point, std::_Identity&lt;Point&gt;, std::less&lt;Point&gt;, std::allocator&lt;Point&gt; &gt;::_M_insert_unique&lt;Point const&amp;&gt;(Point const&amp;)</title>
<polygon fill="#0d1174" stroke="#0d1174" points="829,-372 0,-372 0,-309 829,-309 829,-372"/>
<text text-anchor="middle" x="414.5" y="-360" font-family="Arial" font-size="10.00" fill="#ffffff">YandexOptimization</text>
<text text-anchor="middle" x="414.5" y="-349" font-family="Arial" font-size="10.00" fill="#ffffff">std::pair&lt;std::_Rb_tree_iterator&lt;Point&gt;, bool&gt; std::_Rb_tree&lt;Point, Point, std::_Identity&lt;Point&gt;, std::less&lt;Point&gt;, std::allocator&lt;Point&gt; &gt;::_M_insert_unique&lt;Point const&amp;&gt;(Point const&amp;)</text>
<text text-anchor="middle" x="414.5" y="-338" font-family="Arial" font-size="10.00" fill="#ffffff">1.11%</text>
<text text-anchor="middle" x="414.5" y="-327" font-family="Arial" font-size="10.00" fill="#ffffff">(0.57%)</text>
<text text-anchor="middle" x="414.5" y="-316" font-family="Arial" font-size="10.00" fill="#ffffff">109006×</text>
</g>
<!-- genTests(int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int)&#45;&gt;std::pair&lt;std::_Rb_tree_iterator&lt;Point&gt;, bool&gt; std::_Rb_tree&lt;Point, Point, std::_Identity&lt;Point&gt;, std::less&lt;Point&gt;, std::allocator&lt;Point&gt; &gt;::_M_insert_unique&lt;Point const&amp;&gt;(Point const&amp;) -->
<g id="edge8" class="edge">
<title>genTests(int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int)&#45;&gt;std::pair&lt;std::_Rb_tree_iterator&lt;Point&gt;, bool&gt; std::_Rb_tree&lt;Point, Point, std::_Identity&lt;Point&gt;, std::less&lt;Point&gt;, std::allocator&lt;Point&gt; &gt;::_M_insert_unique&lt;Point const&amp;&gt;(Point const&amp;)</title>
<path fill="none" stroke="#0d1174" stroke-width=".5" d="M422.1099,-411.7562C420.8971,-400.3998 419.5229,-387.5328 418.2793,-375.888"/>
<polygon fill="#0d1174" stroke="#0d1174" stroke-width=".5" points="419.4877,-375.6664 417.8979,-372.3163 417.0515,-375.9267 419.4877,-375.6664"/>
<text text-anchor="middle" x="440.5" y="-395" font-family="Arial" font-size="10.00" fill="#0d1174">1.11%</text>
<text text-anchor="middle" x="440.5" y="-384" font-family="Arial" font-size="10.00" fill="#0d1174">109006×</text>
</g>
<!-- std::pair&lt;std::_Rb_tree_iterator&lt;Point&gt;, bool&gt; std::_Rb_tree&lt;Point, Point, std::_Identity&lt;Point&gt;, std::less&lt;Point&gt;, std::allocator&lt;Point&gt; &gt;::_M_insert_unique&lt;Point const&amp;&gt;(Point const&amp;)&#45;&gt;operator new(unsigned long) -->
<g id="edge15" class="edge">
<title>std::pair&lt;std::_Rb_tree_iterator&lt;Point&gt;, bool&gt; std::_Rb_tree&lt;Point, Point, std::_Identity&lt;Point&gt;, std::less&lt;Point&gt;, std::allocator&lt;Point&gt; &gt;::_M_insert_unique&lt;Point const&amp;&gt;(Point const&amp;)&#45;&gt;operator new(unsigned long)</title>
<path fill="none" stroke="#0d0e73" stroke-width=".5" d="M473.718,-308.8966C496.3192,-296.8349 522.1445,-283.0524 545.0382,-270.8345"/>
<polygon fill="#0d0e73" stroke="#0d0e73" stroke-width=".5" points="545.883,-271.7723 548.394,-269.0436 544.7294,-269.6108 545.883,-271.7723"/>
<text text-anchor="middle" x="547.5" y="-292" font-family="Arial" font-size="10.00" fill="#0d0e73">0.32%</text>
<text text-anchor="middle" x="547.5" y="-281" font-family="Arial" font-size="10.00" fill="#0d0e73">109005×</text>
</g>
<!-- runTests(int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;SolutionGreedy2::solve() -->
<g id="edge13" class="edge">
<title>runTests(int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;SolutionGreedy2::solve()</title>
<path fill="none" stroke="#f82f01" stroke-width="3.81" d="M899.5,-411.7562C899.5,-402.4557 899.5,-392.1421 899.5,-382.3163"/>
<polygon fill="#f82f01" stroke="#f82f01" stroke-width="3.81" points="902.9301,-382.1163 899.5,-372.3163 896.0701,-382.1164 902.9301,-382.1163"/>
<text text-anchor="middle" x="916.5" y="-395" font-family="Arial" font-size="10.00" fill="#f82f01">95.34%</text>
<text text-anchor="middle" x="916.5" y="-384" font-family="Arial" font-size="10.00" fill="#f82f01">6400×</text>
</g>
<!-- std::ostream&amp; std::ostream::_M_insert&lt;double&gt;(double) -->
<g id="node15" class="node">
<title>std::ostream&amp; std::ostream::_M_insert&lt;double&gt;(double)</title>
<polygon fill="#0d0f73" stroke="#0d0f73" points="1230.5,-372 970.5,-372 970.5,-309 1230.5,-309 1230.5,-372"/>
<text text-anchor="middle" x="1100.5" y="-360" font-family="Arial" font-size="10.00" fill="#ffffff">libstdc++.so.6.0.24</text>
<text text-anchor="middle" x="1100.5" y="-349" font-family="Arial" font-size="10.00" fill="#ffffff">std::ostream&amp; std::ostream::_M_insert&lt;double&gt;(double)</text>
<text text-anchor="middle" x="1100.5" y="-338" font-family="Arial" font-size="10.00" fill="#ffffff">0.50%</text>
<text text-anchor="middle" x="1100.5" y="-327" font-family="Arial" font-size="10.00" fill="#ffffff">(0.01%)</text>
<text text-anchor="middle" x="1100.5" y="-316" font-family="Arial" font-size="10.00" fill="#ffffff">6669×</text>
</g>
<!-- runTests(int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;std::ostream&amp; std::ostream::_M_insert&lt;double&gt;(double) -->
<g id="edge14" class="edge">
<title>runTests(int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)&#45;&gt;std::ostream&amp; std::ostream::_M_insert&lt;double&gt;(double)</title>
<path fill="none" stroke="#0d0f73" stroke-width=".5" d="M961.1726,-411.8966C984.8071,-399.7854 1011.827,-385.9394 1035.7421,-373.6844"/>
<polygon fill="#0d0f73" stroke="#0d0f73" stroke-width=".5" points="1036.3878,-374.73 1038.944,-372.0436 1035.2705,-372.5496 1036.3878,-374.73"/>
<text text-anchor="middle" x="1031.5" y="-395" font-family="Arial" font-size="10.00" fill="#0d0f73">0.50%</text>
<text text-anchor="middle" x="1031.5" y="-384" font-family="Arial" font-size="10.00" fill="#0d0f73">6669×</text>
</g>
<!-- void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;)&#39;2&#45;&gt;void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;)&#39;2 -->
<g id="edge17" class="edge">
<title>void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;)&#39;2&#45;&gt;void std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt; &gt;(__gnu_cxx::__normal_iterator&lt;Point*, std::vector&lt;Point, std::allocator&lt;Point&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;SolutionGreedy2::generate_best_move_points()::{lambda(Point const&amp;, Point const&amp;)#1}&gt;)&#39;2</title>
<path fill="none" stroke="#0ba651" stroke-width="1.55" d="M3458.5484,-136.6008C3464.4245,-135.9449 3467.5,-135.2446 3467.5,-134.5 3467.5,-134.1044 3466.632,-133.7214 3464.9373,-133.3508"/>
<polygon fill="#0ba651" stroke="#0ba651" stroke-width="1.55" points="3465.0005,-131.1664 3458.5484,-132.3992 3464.361,-135.459 3465.0005,-131.1664"/>
<text text-anchor="middle" x="3486.5" y="-132" font-family="Arial" font-size="10.00" fill="#0ba651">896000×</text>
</g>
</g>
</svg>
